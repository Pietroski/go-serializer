// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.0
// source: item/item.messages.proto

package grpc_item

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date     int64  `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	Amount   int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	ItemCode string `protobuf:"bytes,3,opt,name=itemCode,proto3" json:"itemCode,omitempty"`
}

func (x *SubItem) Reset() {
	*x = SubItem{}
	mi := &file_item_item_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubItem) ProtoMessage() {}

func (x *SubItem) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubItem.ProtoReflect.Descriptor instead.
func (*SubItem) Descriptor() ([]byte, []int) {
	return file_item_item_messages_proto_rawDescGZIP(), []int{0}
}

func (x *SubItem) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *SubItem) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SubItem) GetItemCode() string {
	if x != nil {
		return x.ItemCode
	}
	return ""
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemId  uint64   `protobuf:"varint,2,opt,name=itemId,proto3" json:"itemId,omitempty"`
	Number  int64    `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	SubItem *SubItem `protobuf:"bytes,6,opt,name=subItem,proto3" json:"subItem,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	mi := &file_item_item_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_item_item_messages_proto_rawDescGZIP(), []int{1}
}

func (x *Item) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Item) GetItemId() uint64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *Item) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Item) GetSubItem() *SubItem {
	if x != nil {
		return x.SubItem
	}
	return nil
}

type AnotherSubItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date     int64  `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	Amount   int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	ItemCode string `protobuf:"bytes,3,opt,name=itemCode,proto3" json:"itemCode,omitempty"`
}

func (x *AnotherSubItem) Reset() {
	*x = AnotherSubItem{}
	mi := &file_item_item_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnotherSubItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnotherSubItem) ProtoMessage() {}

func (x *AnotherSubItem) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnotherSubItem.ProtoReflect.Descriptor instead.
func (*AnotherSubItem) Descriptor() ([]byte, []int) {
	return file_item_item_messages_proto_rawDescGZIP(), []int{2}
}

func (x *AnotherSubItem) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *AnotherSubItem) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AnotherSubItem) GetItemCode() string {
	if x != nil {
		return x.ItemCode
	}
	return ""
}

type AnotherItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemId  uint64          `protobuf:"varint,2,opt,name=itemId,proto3" json:"itemId,omitempty"`
	Number  int64           `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	SubItem *AnotherSubItem `protobuf:"bytes,6,opt,name=subItem,proto3" json:"subItem,omitempty"`
}

func (x *AnotherItem) Reset() {
	*x = AnotherItem{}
	mi := &file_item_item_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnotherItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnotherItem) ProtoMessage() {}

func (x *AnotherItem) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnotherItem.ProtoReflect.Descriptor instead.
func (*AnotherItem) Descriptor() ([]byte, []int) {
	return file_item_item_messages_proto_rawDescGZIP(), []int{3}
}

func (x *AnotherItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AnotherItem) GetItemId() uint64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *AnotherItem) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *AnotherItem) GetSubItem() *AnotherSubItem {
	if x != nil {
		return x.SubItem
	}
	return nil
}

type IntSliceTestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntList []int64 `protobuf:"varint,1,rep,packed,name=int_list,json=intList,proto3" json:"int_list,omitempty"`
}

func (x *IntSliceTestData) Reset() {
	*x = IntSliceTestData{}
	mi := &file_item_item_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntSliceTestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntSliceTestData) ProtoMessage() {}

func (x *IntSliceTestData) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntSliceTestData.ProtoReflect.Descriptor instead.
func (*IntSliceTestData) Descriptor() ([]byte, []int) {
	return file_item_item_messages_proto_rawDescGZIP(), []int{4}
}

func (x *IntSliceTestData) GetIntList() []int64 {
	if x != nil {
		return x.IntList
	}
	return nil
}

type SliceTestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntList        []int64      `protobuf:"varint,1,rep,packed,name=int_list,json=intList,proto3" json:"int_list,omitempty"`
	UintList       []uint64     `protobuf:"varint,2,rep,packed,name=uint_list,json=uintList,proto3" json:"uint_list,omitempty"`
	StrList        []string     `protobuf:"bytes,3,rep,name=str_list,json=strList,proto3" json:"str_list,omitempty"`
	StructList     []*SliceItem `protobuf:"bytes,4,rep,name=struct_list,json=structList,proto3" json:"struct_list,omitempty"`
	StructNilList  []*SliceItem `protobuf:"bytes,5,rep,name=struct_nil_list,json=structNilList,proto3" json:"struct_nil_list,omitempty"`
	BytesBytesList [][]byte     `protobuf:"bytes,6,rep,name=bytes_bytes_list,json=bytesBytesList,proto3" json:"bytes_bytes_list,omitempty"`
	BytesList      []byte       `protobuf:"bytes,7,opt,name=bytes_list,json=bytesList,proto3" json:"bytes_list,omitempty"`
}

func (x *SliceTestData) Reset() {
	*x = SliceTestData{}
	mi := &file_item_item_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SliceTestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceTestData) ProtoMessage() {}

func (x *SliceTestData) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceTestData.ProtoReflect.Descriptor instead.
func (*SliceTestData) Descriptor() ([]byte, []int) {
	return file_item_item_messages_proto_rawDescGZIP(), []int{5}
}

func (x *SliceTestData) GetIntList() []int64 {
	if x != nil {
		return x.IntList
	}
	return nil
}

func (x *SliceTestData) GetUintList() []uint64 {
	if x != nil {
		return x.UintList
	}
	return nil
}

func (x *SliceTestData) GetStrList() []string {
	if x != nil {
		return x.StrList
	}
	return nil
}

func (x *SliceTestData) GetStructList() []*SliceItem {
	if x != nil {
		return x.StructList
	}
	return nil
}

func (x *SliceTestData) GetStructNilList() []*SliceItem {
	if x != nil {
		return x.StructNilList
	}
	return nil
}

func (x *SliceTestData) GetBytesBytesList() [][]byte {
	if x != nil {
		return x.BytesBytesList
	}
	return nil
}

func (x *SliceTestData) GetBytesList() []byte {
	if x != nil {
		return x.BytesList
	}
	return nil
}

type SliceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Int  int64  `protobuf:"varint,1,opt,name=int,proto3" json:"int,omitempty"`
	Str  string `protobuf:"bytes,2,opt,name=str,proto3" json:"str,omitempty"`
	Bool bool   `protobuf:"varint,3,opt,name=bool,proto3" json:"bool,omitempty"`
}

func (x *SliceItem) Reset() {
	*x = SliceItem{}
	mi := &file_item_item_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SliceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceItem) ProtoMessage() {}

func (x *SliceItem) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceItem.ProtoReflect.Descriptor instead.
func (*SliceItem) Descriptor() ([]byte, []int) {
	return file_item_item_messages_proto_rawDescGZIP(), []int{6}
}

func (x *SliceItem) GetInt() int64 {
	if x != nil {
		return x.Int
	}
	return 0
}

func (x *SliceItem) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

func (x *SliceItem) GetBool() bool {
	if x != nil {
		return x.Bool
	}
	return false
}

type MapTestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Int64KeyMapInt64Value map[int64]int64   `protobuf:"bytes,1,rep,name=int64_key_map_int64_value,json=int64KeyMapInt64Value,proto3" json:"int64_key_map_int64_value,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	StrKeyMapStrValue     map[string]string `protobuf:"bytes,2,rep,name=str_key_map_str_value,json=strKeyMapStrValue,proto3" json:"str_key_map_str_value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapTestData) Reset() {
	*x = MapTestData{}
	mi := &file_item_item_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapTestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapTestData) ProtoMessage() {}

func (x *MapTestData) ProtoReflect() protoreflect.Message {
	mi := &file_item_item_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapTestData.ProtoReflect.Descriptor instead.
func (*MapTestData) Descriptor() ([]byte, []int) {
	return file_item_item_messages_proto_rawDescGZIP(), []int{7}
}

func (x *MapTestData) GetInt64KeyMapInt64Value() map[int64]int64 {
	if x != nil {
		return x.Int64KeyMapInt64Value
	}
	return nil
}

func (x *MapTestData) GetStrKeyMapStrValue() map[string]string {
	if x != nil {
		return x.StrKeyMapStrValue
	}
	return nil
}

var File_item_item_messages_proto protoreflect.FileDescriptor

var file_item_item_messages_proto_rawDesc = []byte{
	0x0a, 0x18, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x22, 0x51, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x6f, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x07, 0x73,
	0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69,
	0x74, 0x65, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x49, 0x74, 0x65, 0x6d, 0x22, 0x58, 0x0a, 0x0e, 0x41, 0x6e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x7d,
	0x0a, 0x0b, 0x41, 0x6e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a,
	0x07, 0x73, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x41, 0x6e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x75, 0x62,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x73, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x2d, 0x0a,
	0x10, 0x49, 0x6e, 0x74, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x96, 0x02, 0x0a,
	0x0d, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x07, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x69, 0x6e,
	0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x75, 0x69,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x6c,
	0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x69,
	0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69,
	0x74, 0x65, 0x6d, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x4e, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0e, 0x62, 0x79, 0x74, 0x65, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x43, 0x0a, 0x09, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x73, 0x74, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x22, 0xe1, 0x02, 0x0a, 0x0b, 0x4d,
	0x61, 0x70, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x66, 0x0a, 0x19, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x69, 0x74, 0x65, 0x6d, 0x2e, 0x4d, 0x61, 0x70, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x74, 0x36,
	0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x15, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x5a, 0x0a, 0x15, 0x73, 0x74, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6d, 0x61,
	0x70, 0x5f, 0x73, 0x74, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x4d, 0x61, 0x70, 0x54, 0x65, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x74, 0x72, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x70, 0x53, 0x74,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x73, 0x74, 0x72,
	0x4b, 0x65, 0x79, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x48,
	0x0a, 0x1a, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x44, 0x0a, 0x16, 0x53, 0x74, 0x72, 0x4b,
	0x65, 0x79, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x75,
	0x5a, 0x73, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x69, 0x65,
	0x74, 0x72, 0x6f, 0x73, 0x6b, 0x69, 0x2d, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x2d,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2f, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f,
	0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x3b, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_item_item_messages_proto_rawDescOnce sync.Once
	file_item_item_messages_proto_rawDescData = file_item_item_messages_proto_rawDesc
)

func file_item_item_messages_proto_rawDescGZIP() []byte {
	file_item_item_messages_proto_rawDescOnce.Do(func() {
		file_item_item_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_item_item_messages_proto_rawDescData)
	})
	return file_item_item_messages_proto_rawDescData
}

var file_item_item_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_item_item_messages_proto_goTypes = []any{
	(*SubItem)(nil),          // 0: item.SubItem
	(*Item)(nil),             // 1: item.Item
	(*AnotherSubItem)(nil),   // 2: item.AnotherSubItem
	(*AnotherItem)(nil),      // 3: item.AnotherItem
	(*IntSliceTestData)(nil), // 4: item.IntSliceTestData
	(*SliceTestData)(nil),    // 5: item.SliceTestData
	(*SliceItem)(nil),        // 6: item.SliceItem
	(*MapTestData)(nil),      // 7: item.MapTestData
	nil,                      // 8: item.MapTestData.Int64KeyMapInt64ValueEntry
	nil,                      // 9: item.MapTestData.StrKeyMapStrValueEntry
}
var file_item_item_messages_proto_depIdxs = []int32{
	0, // 0: item.Item.subItem:type_name -> item.SubItem
	2, // 1: item.AnotherItem.subItem:type_name -> item.AnotherSubItem
	6, // 2: item.SliceTestData.struct_list:type_name -> item.SliceItem
	6, // 3: item.SliceTestData.struct_nil_list:type_name -> item.SliceItem
	8, // 4: item.MapTestData.int64_key_map_int64_value:type_name -> item.MapTestData.Int64KeyMapInt64ValueEntry
	9, // 5: item.MapTestData.str_key_map_str_value:type_name -> item.MapTestData.StrKeyMapStrValueEntry
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_item_item_messages_proto_init() }
func file_item_item_messages_proto_init() {
	if File_item_item_messages_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_item_item_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_item_item_messages_proto_goTypes,
		DependencyIndexes: file_item_item_messages_proto_depIdxs,
		MessageInfos:      file_item_item_messages_proto_msgTypes,
	}.Build()
	File_item_item_messages_proto = out.File
	file_item_item_messages_proto_rawDesc = nil
	file_item_item_messages_proto_goTypes = nil
	file_item_item_messages_proto_depIdxs = nil
}
